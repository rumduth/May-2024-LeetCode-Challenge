class Solution {
public:
    string add1(string& s){
        int n = s.length();
        reverse(s.begin(),s.end());
        int carry = 1;
        for(int i = 0; i < n; i++){
            int sum = carry + (s[i] - '0');
            if(sum == 2){
                carry = 1;
                s[i] = '0';
            }else if(sum == 1){
                carry = 0;
                s[i] = '1';
                break;
            }else{
                carry = 0;
                s[i] = '0';
                break;
            }
        }
        if(carry == 1){
            s.push_back('1');
        }
        reverse(s.begin(),s.end());
        return s;
    }
    int numSteps(string s) {
        int cnt = 0;
        while(s.length() != 1){
            int n = s.length();
            if(s[n-1] == '0')
                s.pop_back();
            else
                s = add1(s);
            cnt++;
        }
        return cnt;
    }
};
