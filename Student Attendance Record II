class Solution {
public:
    int checkRecord(int n) {
        const int MOD = 1e9 + 7;
        using ll = long long;
        vector<vector<vector<ll>>> dp(n, vector<vector<ll>>(2, vector<ll>(3,0)));
        dp[0][0][0] = 1; 
        dp[0][0][1] = 1;
        dp[0][1][0] = 1;
        for(int i = 1; i < n; i++){

            //Count absence with 0 absence
            

            //Late
            dp[i][0][1] = dp[i-1][0][0];
            dp[i][0][2] = dp[i-1][0][1];
            dp[i][1][1] = dp[i-1][1][0];
            dp[i][1][2] = dp[i-1][1][1];

            dp[i][0][0] = (dp[i-1][0][0] + dp[i-1][0][1] + dp[i-1][0][2]) % MOD;
            dp[i][1][0] = (dp[i][1][0] + dp[i-1][1][0] + dp[i-1][1][1] + dp[i-1][1][2]) % MOD;
            dp[i][1][0] = (dp[i][1][0] + dp[i-1][0][0] + dp[i-1][0][1] + dp[i-1][0][2]) % MOD;
            

        }
        ll result = 0;
        for(int absence = 0; absence < 2; ++absence){
            for(int late = 0; late < 3; ++late){
                result = (result + dp[n-1][absence][late]) % MOD;
            }
        }
        return result;
    }
};
